2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Current SDK version is 0.18.3
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Configure stats pid to 4832
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Loading settings from C:\Users\harry\.config\wandb\settings
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Loading settings from C:\Users\harry\OneDrive\Desktop\cloud backup\RL\HW\HW3\rl_hw3\hw3_rev1_raw\rl_assignment_3\env3_donkey_kong\wandb\settings
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Loading settings from environment variables: {}
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Applying setup settings: {'mode': None, '_disable_service': None}
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Inferring run settings from compute environment: {'program_relpath': 'hw3_rev1_raw\\rl_assignment_3\\env3_donkey_kong\\train_donkey.py', 'program_abspath': 'C:\\Users\\harry\\OneDrive\\Desktop\\cloud backup\\RL\\HW\\HW3\\rl_hw3\\hw3_rev1_raw\\rl_assignment_3\\env3_donkey_kong\\train_donkey.py', 'program': 'C:\\Users\\harry\\OneDrive\\Desktop\\cloud backup\\RL\\HW\\HW3\\rl_hw3\\hw3_rev1_raw\\rl_assignment_3\\env3_donkey_kong\\train_donkey.py'}
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_setup.py:_flush():79] Applying login settings: {}
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_init.py:_log_setup():532] Logging user logs to C:\Users\harry\OneDrive\Desktop\cloud backup\RL\HW\HW3\rl_hw3\hw3_rev1_raw\rl_assignment_3\env3_donkey_kong\wandb\run-20241030_111357-DQN_DonkeyKong\logs\debug.log
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_init.py:_log_setup():533] Logging internal logs to C:\Users\harry\OneDrive\Desktop\cloud backup\RL\HW\HW3\rl_hw3\hw3_rev1_raw\rl_assignment_3\env3_donkey_kong\wandb\run-20241030_111357-DQN_DonkeyKong\logs\debug-internal.log
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_init.py:init():617] calling init triggers
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_init.py:init():624] wandb.init called with sweep_config: {}
config: {'run_id': 'DQN_DonkeyKong', 'algorithm': <class 'stable_baselines3.dqn.dqn.DQN'>, 'policy_network': 'CnnPolicy', 'save_path': './trained_models/donkey_kong_model', 'epoch_num': 1000, 'timesteps_per_epoch': 5000, 'eval_episode_num': 10, 'learning_rate': 0.0001, 'buffer_size': 100000, 'learning_starts': 10000, 'batch_size': 32, 'tau': 1.0, 'gamma': 0.99, 'train_freq': 4, 'gradient_steps': 1, 'target_update_interval': 1000, 'exploration_fraction': 0.1, 'exploration_initial_eps': 1.0, 'exploration_final_eps': 0.01}
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_init.py:init():667] starting backend
2024-10-30 11:13:57,102 INFO    MainThread:4832 [wandb_init.py:init():671] sending inform_init request
2024-10-30 11:13:57,112 INFO    MainThread:4832 [backend.py:_multiprocessing_setup():104] multiprocessing start_methods=spawn, using: spawn
2024-10-30 11:13:57,112 INFO    MainThread:4832 [wandb_init.py:init():684] backend started and connected
2024-10-30 11:13:57,114 INFO    MainThread:4832 [wandb_init.py:init():779] updated telemetry
2024-10-30 11:13:57,177 INFO    MainThread:4832 [wandb_init.py:init():812] communicating run to backend with 90.0 second timeout
2024-10-30 11:13:58,014 INFO    MainThread:4832 [wandb_init.py:init():863] starting run threads in backend
2024-10-30 11:13:58,082 INFO    MainThread:4832 [wandb_run.py:_console_start():2465] atexit reg
2024-10-30 11:13:58,082 INFO    MainThread:4832 [wandb_run.py:_redirect():2313] redirect: wrap_raw
2024-10-30 11:13:58,083 INFO    MainThread:4832 [wandb_run.py:_redirect():2378] Wrapping output streams.
2024-10-30 11:13:58,083 INFO    MainThread:4832 [wandb_run.py:_redirect():2403] Redirects installed.
2024-10-30 11:13:58,086 INFO    MainThread:4832 [wandb_init.py:init():907] run started, returning control to user process
2024-10-30 11:14:03,215 INFO    MainThread:4832 [wandb_run.py:_tensorboard_callback():1556] tensorboard callback: DQN_DonkeyKong\DQN_0, True
2024-10-30 11:14:03,216 INFO    MainThread:4832 [wandb_watch.py:watch():67] Watching
2024-10-30 11:14:03,219 INFO    MainThread:4832 [wandb_run.py:_config_callback():1394] config_cb None None {'algo': 'DQN', 'policy_class': "<class 'stable_baselines3.dqn.policies.CnnPolicy'>", 'device': 'cuda', 'verbose': 0, 'policy_kwargs': "{'features_extractor_class': <class 'my_donkey_model.DonkeyKongCNN'>, 'features_extractor_kwargs': {'features_dim': 512}}", 'num_timesteps': 0, '_total_timesteps': 5000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1730258043192720600, 'tensorboard_log': 'DQN_DonkeyKong', '_last_obs': '[[[[0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   ...\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]]]\n\n\n [[[0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   ...\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]]]\n\n\n [[[0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   ...\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]]]\n\n\n [[[0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   ...\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]]]]', '_last_episode_starts': '[ True  True  True  True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', 'env': '<stable_baselines3.common.vec_env.vec_transpose.VecTransposeImage object at 0x000001D5838A0310>', '_vec_normalize_env': 'None', 'observation_space': 'Box(0, 255, (1, 84, 84), uint8)', 'action_space': 'Discrete(18)', 'n_envs': 4, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.ReplayBuffer object at 0x000001D5816BC150>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.ReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'use_sde_at_warmup': 'False', '_n_calls': 0, 'max_grad_norm': 10, 'exploration_rate': 0.0, 'lr_schedule': '<function get_schedule_fn.<locals>.<lambda> at 0x000001D58391C360>', 'policy': 'CnnPolicy(\n  (q_net): QNetwork(\n    (features_extractor): DonkeyKongCNN(\n      (cnn): Sequential(\n        (0): Conv2d(1, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5): ReLU()\n        (6): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))\n        (7): ReLU()\n        (8): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear): Sequential(\n        (0): Linear(in_features=800, out_features=512, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=512, out_features=512, bias=True)\n        (3): ReLU()\n      )\n    )\n    (q_net): Sequential(\n      (0): Linear(in_features=512, out_features=64, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=64, out_features=18, bias=True)\n    )\n  )\n  (q_net_target): QNetwork(\n    (features_extractor): DonkeyKongCNN(\n      (cnn): Sequential(\n        (0): Conv2d(1, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5): ReLU()\n        (6): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))\n        (7): ReLU()\n        (8): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear): Sequential(\n        (0): Linear(in_features=800, out_features=512, bias=True)\n        (1): ReLU()\n        (2): Linear(in_features=512, out_features=512, bias=True)\n        (3): ReLU()\n      )\n    )\n    (q_net): Sequential(\n      (0): Linear(in_features=512, out_features=64, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=64, out_features=18, bias=True)\n    )\n  )\n)', 'q_net': 'QNetwork(\n  (features_extractor): DonkeyKongCNN(\n    (cnn): Sequential(\n      (0): Conv2d(1, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n      (6): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))\n      (7): ReLU()\n      (8): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n      (0): Linear(in_features=800, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n    )\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=512, out_features=64, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=64, out_features=64, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=64, out_features=18, bias=True)\n  )\n)', 'q_net_target': 'QNetwork(\n  (features_extractor): DonkeyKongCNN(\n    (cnn): Sequential(\n      (0): Conv2d(1, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n      (6): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))\n      (7): ReLU()\n      (8): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n      (0): Linear(in_features=800, out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512, out_features=512, bias=True)\n      (3): ReLU()\n    )\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=512, out_features=64, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=64, out_features=64, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=64, out_features=18, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', 'exploration_schedule': '<function get_linear_fn.<locals>.func at 0x000001D5B83918A0>', '_logger': '<stable_baselines3.common.logger.Logger object at 0x000001D5B5FAD490>'}
2024-10-30 11:16:15,417 INFO    MainThread:4832 [wandb_run.py:_tensorboard_callback():1556] tensorboard callback: DQN_DonkeyKong\DQN_0, True
2024-10-30 11:16:15,432 INFO    MainThread:4832 [wandb_watch.py:watch():67] Watching
2024-10-30 11:16:15,434 INFO    MainThread:4832 [wandb_run.py:_config_callback():1394] config_cb None None {}
2024-10-30 11:17:05,079 WARNING MsgRouterThr:4832 [router.py:message_loop():77] message_loop has been closed
